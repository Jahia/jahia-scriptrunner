# The baseDirectory is used to specify a base directory that will then be used for all runtime execution, mostly by
# using a property reference in the properties below. This is an optional parameter since by default it will have
# the value of the current work directory or the value specified using the -d command line parameter.
# baseDirectory=

# The scriptOptions property is used to pass options to the script being executed. The format is a comma-seperated list
# key=value pairs that will be converted to a Properties object passed to the executing script. It is also possible
# to specify script options directly from the command line using the -x parameter, and this is usually the most
# practical way of using them.
# scriptOptions=namespaceOperation=remove,namespace=test2:http://localhost/test2

# The engineName is used to resolve the engine to be used inside the script runner. The engine will be inserted in the
# class loader setup for script execution.
engineName=jahia
# The engineDisplayName is the name of the engine that will be used in user interface screen
engineDisplayName=Jahia
# The engineDefault version will be used if no engine version can be resolved. See the versionDetection settings for
# more details on how the version is resolved.
engineDefaultVersion=6.6

# The classPath setting is used to build a class loader in which the script will be executed. You might want to customize
# this setting if you are bringing your own database driver and want to automatically include it in the script class
# loader.
classPath=${baseDirectory}/WEB-INF/classes,${baseDirectory}/WEB-INF/lib/*.jar

# The tempDirectory is used to specify the temporary directory in which some built-in JARs will be copied to be able
# to add them to the script class loader, as it is unfortunately not possible to add direct references to embedded JARs
# in a class loader (see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4735639 for more details)
tempDirectory=${user.home}/.scriptrunner/temp

# The versionDetectionJar setting is used to specify the JAR in which the version will be resolved using the MANIFEST
# entries. The versionDetectionVersionAttributeName and versionDetectionBuildAttributeName are used to specify the
# name of the attributes in the MANIFEST that will contain the version and build number information.
versionDetectionJar=${baseDirectory}/WEB-INF/lib/jahia-impl-*.jar
versionDetectionVersionAttributeName=Implementation-Version
versionDetectionBuildAttributeName=Implementation-Build

# The following Jackrabbit properties are used to setup the JackrabbitHelper class and are rather self-speaking. The
# consistency check and fix boolean will indicate whether consistency checks and fixes should be run when initializing
# access to the repository content.
jackrabbitConfigFile=${baseDirectory}/WEB-INF/etc/repository/jackrabbit/repository.xml
jackrabbitHomeDirectory=${baseDirectory}/WEB-INF/var/repository
jackrabbitConsistencyCheck=false
jackrabbitConsistencyFix=false

# The dbConfigurationSource property points to a Tomcat-specific context.xml descriptor since this is where Jahia
# installations store the database configuration, even when deployed on non-Tomcat application servers such as
# WebSphere. If you prefer to specify the database configuration manually, make sure this setting is empty as it will
# always take precedence over the manual settings below.
dbConfigurationSource=${baseDirectory}/META-INF/context.xml
# The dbDerbySystemHome setting is used to initialize the derby.system.home property if it was not specified directly
# on the JVM start command line (usually not the case with the default shell scripts). This setting is only used if
# the script runner detects a "derby" sub-string in the database connection URL (either from the dbConfigurationSource
# Tomcat descriptor of the dbUrl setting below)
dbDerbySystemHome=${baseDirectory}/WEB-INF/var/dbdata
# The following properties make it possible to setup a manual JDBC connection to the database, useful if you cannot use
# the Tomcat-specific driver. Make sure you blank the dbConfigurationSource setting as it will otherwise take
# precedence.
# dbDriverClassName=
# dbUrl=
# dbUserName=
# dbPassword=
# dbDatabaseType=